country_covid_and_metadata[country_covid_and_metadata$Tests
<country_covid_and_metadata$CasosDia40DC,]
ggplot(country_covid_and_metadata, aes(x=Poblacion, y=Tests)) +
geom_point()+
geom_smooth(method=lm)
ggplot(country_covid_and_metadata, aes(x=CasosDia40DC, y=Tests)) +
geom_point()+
geom_smooth(method=lm)
ggplot(country_covid_and_metadata, aes(x=FallDia40DC, y=Tests)) +
geom_point()+
geom_smooth(method=lm)
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]$Tests<-NaN
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
country_covid_and_metadata <- merge(covid_country, country_incomes_elderly_continent,
by.x="Pais", by.y="Country.Name",all.x = TRUE)
#Borramos el codigo del pais
country_covid_and_metadata <- country_covid_and_metadata %>% select(-Country.Code)
head(country_covid_and_metadata)
sapply(country_covid_and_metadata, class)
country_covid_and_metadata$Tests <- as.numeric(as.character(country_covid_and_metadata$Tests))
country_covid_and_metadata$Poblacion <- as.numeric(country_covid_and_metadata$Poblacion)
sapply(country_covid_and_metadata, function(x) sum(is.na(x)))
show_outlier<-function(data){
values <- boxplot.stats(data)$out
idx <- which( data %in% values)
cat("Valores extremos:", toString(values), "\n" )
(country_covid_and_metadata[idx, ])
}
show_outlier(country_covid_and_metadata$CasosDia40DC)
show_outlier(country_covid_and_metadata$FallDia40DC)
show_outlier(country_covid_and_metadata$Tests)
show_outlier(country_covid_and_metadata$Poblacion)
show_outlier(country_covid_and_metadata$Densidad)
show_outlier(country_covid_and_metadata$UpTo65)
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]$Tests
country_covid_and_metadata$Tests[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
country_covid_and_metadata$Tests[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
country_covid_and_metadata$Tests[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC]
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
country_covid_and_metadata$Tests[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC]<-NaN
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
country_covid_and_metadata <- merge(covid_country, country_incomes_elderly_continent,
by.x="Pais", by.y="Country.Name",all.x = TRUE)
#Borramos el codigo del pais
country_covid_and_metadata <- country_covid_and_metadata %>% select(-Country.Code)
head(country_covid_and_metadata)
sapply(country_covid_and_metadata, class)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
continente_ingresos <- read.csv(file="..\\csv\\WorldBankData\\Metadata_Country.csv")
continente_ingresos <- continente_ingresos %>% select("ï..Country.Code",
TableName,
Region,
IncomeGroup )
head(continente_ingresos)
porcentaje_mayores <- read.csv(file="..\\csv\\WorldBankData\\UP65_Percentage.csv",
sep = ",")
porcentaje_mayores <- porcentaje_mayores %>% select(Country.Code,
"ï..Country.Name", X2018)
head(porcentaje_mayores)
country_incomes_elderly_continent <-merge(porcentaje_mayores, continente_ingresos,
by.x="Country.Code", by.y="ï..Country.Code")
country_incomes_elderly_continent <- country_incomes_elderly_continent %>%
select(Country.Code,
"ï..Country.Name",
Region, IncomeGroup,
X2018)
country_incomes_elderly_continent <- country_incomes_elderly_continent %>%
rename(Continent=Region,
Country.Name="ï..Country.Name",
UpTo65=X2018)
head(country_incomes_elderly_continent)
total_casos <- read.csv(file="..\\csv\\covid_19_series\\TotalCases_covid19_timeserie.csv",
sep = ",")
total_muertes <- read.csv(file="..\\csv\\covid_19_series\\TotalDeaths_covid19_timeserie.csv",
sep = ",")
total_tests <- read.csv(file="..\\csv\\covid_19_series\\TotalTests_covid19_timeserie.csv",
sep = ",")
#Quitamos indices de paises vacios
total_casos <- total_casos[!is.na(total_casos$Country),]
total_muertes <- total_muertes[!is.na(total_muertes$Country),]
total_tests <- total_tests[!is.na(total_tests$Country),]
#Quitamos datos de el mundo
total_casos <- total_casos[!total_casos$Country=='World',]
total_muertes <- total_muertes[!total_muertes$Country=='World',]
total_tests <- total_tests[!total_tests$Country=='World',]
#Limpiamos los casos donde hay Nan en la medida: será 0.
total_casos[is.na(total_casos)] <- 0
total_muertes[is.na(total_muertes)] <- 0
total_tests[is.na(total_tests)] <- 0
#Mostramos ejemplos de unas pocas columnas y unas pocas filas
head(total_muertes[,1:3])
index_100<-function(row){
#Inicializamos los datos del pais, sera c(nombre, idColumna20diasDC)
res <- c(row[1], NaN)
#Vemos el numero de columnas que hay: numero de dias+nombrepais
ncols <- length(names(row))
#Recorremos todos los dias(por eso desde el 2, no recorremos el nombre)
for(idxCol in seq(2,ncols)){
#Obtenemos los fallecidos de ese dia
fallec = as.numeric(row[idxCol])
#Si superan nuestro umbral de 100 establecemos el resultado, BREAK del loop y return
#Es decir, el primer valor que pase de 100 romperá el bucle
if(fallec>100){
if((idxCol==2)&(fallec>200)){
#Si ya en la primera columna hay mas de 100, estimamos los dias
res<-c(row[1], -round((sqrt(fallec)/4))+40)
}else{
res<-c(row[1], as.numeric(idxCol)+40)
}
#Salimos del bucle para devolver el resultado segun encontramos el 1er valor >100
break
}
}
return(res)
}
#Aplicamos la funcion a cada linea del df, a cada pais
death_100 <- apply(total_muertes, 1, FUN=index_100)
#Creamos el dataframe de la lista resultante
death_100 <- as.data.frame(t(death_100))
#Damos nombre a las coumnas
colnames(death_100) <- c("Pais", "idCol")
#Convertimos la columna a numerico
death_100$idCol <- as.numeric(as.character(death_100$idCol))
#Ordenamos los paises por la llegada del Covid
death_100 <- death_100[order(death_100$idCol),]
#Mostramos un ejemplo del resultado
death_100[c(1,2,4,20,50,65,100),]
get_deaths_40_days <- function(row){
idCol <- as.numeric(row["idCol"])
fall <- total_muertes[total_muertes$Country==row["Pais"],idCol]
casos <- total_casos[total_casos$Country==row["Pais"],idCol]
test <- total_tests[total_tests$Country==row["Pais"],idCol]
if(is.null(casos)){
casos<-0
fall<-0
test<-0
}
return(c(row["Pais"],casos,fall,test))
}
day_40_dc <- apply(death_100, 1, FUN=get_deaths_40_days)
day_40_dc <- as.data.frame(t(as.data.frame(day_40_dc)))
colnames(day_40_dc) <- c("Pais", "CasosDia40DC", "FallDia40DC", "Tests")
day_40_dc$CasosDia40DC <- as.numeric(as.character(day_40_dc$CasosDia40DC))
day_40_dc$FallDia40DC <- as.numeric(as.character(day_40_dc$FallDia40DC))
day_40_dc$Pais <- as.character(day_40_dc$Pais)
#Vemos los países que tenemos en total (de momento son todos)
dim(day_40_dc)
head(day_40_dc)
day_40_dc <- day_40_dc[(day_40_dc$CasosDia40DC>0),]
#Contamos los países con los que podemos realizar en análisis estático.
dim(day_40_dc)
#Mostramos ejemplo del dataset
head(day_40_dc)
poblacion <- read.csv(file="..\\csv\\world_population_2020.csv")
poblacion <- poblacion %>% rename(Country="Country..or.dependency.",
Poblacion="Population..2020.",
Densidad="Density..P.KmÂ².")
head(poblacion[order(poblacion$Country),])
day_40_dc[day_40_dc$Pais=='USA',]$Pais <-"United States"
day_40_dc[day_40_dc$Pais=='UK',]$Pais <-"United Kingdom"
day_40_dc[day_40_dc$Pais=='S. Korea',]$Pais <-"South Korea"
day_40_dc[day_40_dc$Pais=='Czechia',]$Pais <-"Czech Republic (Czechia)"
covid_country<-merge(day_40_dc, poblacion, by.x="Pais", by.y="Country",all.x = TRUE)
covid_country<-covid_country[order(-covid_country$CasosDia40DC),]
head(covid_country)
aux<-merge(covid_country, country_incomes_elderly_continent, by.x="Pais",
by.y="Country.Name",all.x = TRUE)
aux[is.na(aux$Country.Code),]
country_incomes_elderly_continent$Country.Name <-
as.character(country_incomes_elderly_continent$Country.Name)
country_incomes_elderly_continent[country_incomes_elderly_continent$Country.Name==
'Czech Republic',]$Country.Name <-"Czech Republic (Czechia)"
country_incomes_elderly_continent[country_incomes_elderly_continent$Country.Name==
'Egypt, Arab Rep.',]$Country.Name <-"Egypt"
country_incomes_elderly_continent[country_incomes_elderly_continent$Country.Name==
'Iran, Islamic Rep.',]$Country.Name <-"Iran"
country_incomes_elderly_continent[country_incomes_elderly_continent$Country.Name==
'Russian Federation',]$Country.Name <-"Russia"
country_incomes_elderly_continent[country_incomes_elderly_continent$Country.Name==
'Korea, Rep.',]$Country.Name <-"South Korea"
country_covid_and_metadata <- merge(covid_country, country_incomes_elderly_continent,
by.x="Pais", by.y="Country.Name",all.x = TRUE)
#Borramos el codigo del pais
country_covid_and_metadata <- country_covid_and_metadata %>% select(-Country.Code)
head(country_covid_and_metadata)
sapply(country_covid_and_metadata, class)
country_covid_and_metadata$Tests <- as.numeric(as.character(country_covid_and_metadata$Tests))
country_covid_and_metadata$Poblacion <- as.numeric(country_covid_and_metadata$Poblacion)
sapply(country_covid_and_metadata, function(x) sum(is.na(x)))
show_outlier<-function(data){
values <- boxplot.stats(data)$out
idx <- which( data %in% values)
cat("Valores extremos:", toString(values), "\n" )
(country_covid_and_metadata[idx, ])
}
show_outlier(country_covid_and_metadata$CasosDia40DC)
show_outlier(country_covid_and_metadata$FallDia40DC)
show_outlier(country_covid_and_metadata$Tests)
show_outlier(country_covid_and_metadata$Poblacion)
show_outlier(country_covid_and_metadata$Densidad)
show_outlier(country_covid_and_metadata$UpTo65)
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
country_covid_and_metadata$Tests[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC]
ggplot(country_covid_and_metadata, aes(x=FallDia40DC, y=Tests)) +
geom_point()+
geom_smooth(method=lm)
write.csv(country_covid_and_metadata, "..\\csv\\country_40dc_metadata.csv", row.names=FALSE)
model_tests_Casos <- lm(Tests∼CasosDia40DC, data=country_covid_and_metadata)
summary(model_peso_AD)
summary(model_tests_Casos)
ggplot(country_covid_and_metadata, aes(x=Poblacion, y=Tests)) +
geom_point()+
geom_smooth(method=lm)
model_tests_Casos <- lm(Tests∼Poblacion, data=country_covid_and_metadata)
summary(model_tests_Casos)
model_tests_Casos <- lm(Tests∼CasosDia40DC, data=country_covid_and_metadata)
summary(model_tests_Casos)
model_tests_Casos <- lm(Tests∼CasosDia40DC+FallDia40DC, data=country_covid_and_metadata)
summary(model_tests_Casos)
ggplot(country_covid_and_metadata, aes(x=CasosDia40DC+FallDia40DC, y=Tests)) +
geom_point()+ geom_smooth(method=lm)
country_covid_and_metadata$Tests[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC]<-10
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
model_tests_Casos <- lm(Tests∼CasosDia40DC+FallDia40DC, data=country_covid_and_metadata)
summary(model_tests_Casos)
CasosDia40DC
CasosDia40DC
CasosDia40DC
newdata <- data.frame(
CasosDia40DC = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$CasosDia40DC,
FallDia40DC=country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$FallDia40DC, )
country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$CasosDia40DC
country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$FallDia40DC
casos = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$CasosDia40DC
falle = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$FallDia40DC
newdata <- data.frame( CasosDia40DC = casos, FallDia40DC=falle  )
#predict(model_ge, newdata)
newdata
casos = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$CasosDia40DC
falle = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$FallDia40DC
newdata <- data.frame( CasosDia40DC = casos, FallDia40DC=falle)
predict(model_tests, newdata)
model_tests <- lm(Tests∼CasosDia40DC+FallDia40DC, data=country_covid_and_metadata)
summary(model_tests)
casos = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$CasosDia40DC
falle = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$FallDia40DC
newdata <- data.frame( CasosDia40DC = casos, FallDia40DC=falle)
predict(model_tests, newdata)
casos = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$CasosDia40DC
falle = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$FallDia40DC
newdata <- data.frame( CasosDia40DC = casos, FallDia40DC=falle)
(pr <- predict(model_tests, newdata))
casos = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$CasosDia40DC
falle = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$FallDia40DC
newdata <- data.frame( CasosDia40DC = casos, FallDia40DC=falle)
(pr <- predict(model_tests, newdata))
country_covid_and_metadata$Tests[country_covid_and_metadata$Pais=='China']<-pr
country_covid_and_metadata$Tests
country_covid_and_metadata
casos = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$CasosDia40DC
falle = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$FallDia40DC
newdata <- data.frame( CasosDia40DC = casos, FallDia40DC=falle)
(pr <- predict(model_tests, newdata))
country_covid_and_metadata$Tests[country_covid_and_metadata$Pais=='China']<-round(pr)
country_covid_and_metadata
write.csv(country_covid_and_metadata, "..\\csv\\country_40dc_metadata.csv", row.names=FALSE)
head(country_covid_and_metadata)
names(country_covid_and_metadata)
library(dplyr)
library(ggplot2)
library(knitr)
library(kableExtra)
install.packages(kableExtra)
install.packages(kableExtra)
install.packages("kableExtra")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(knitr)
library(kableExtra)
continente_ingresos <- read.csv(file="..\\..\\csv\\WorldBankData\\Metadata_Country.csv")
continente_ingresos <- continente_ingresos %>% select("ï..Country.Code",
TableName,
Region,
IncomeGroup )
head(continente_ingresos)
porcentaje_mayores <- read.csv(file="..\\..\\csv\\WorldBankData\\UP65_Percentage.csv",
sep = ",")
porcentaje_mayores <- porcentaje_mayores %>% select(Country.Code,
"ï..Country.Name", X2018)
head(porcentaje_mayores)
country_incomes_elderly_continent <-merge(porcentaje_mayores, continente_ingresos,
by.x="Country.Code", by.y="ï..Country.Code")
country_incomes_elderly_continent <- country_incomes_elderly_continent %>%
select(Country.Code,
"ï..Country.Name",
Region, IncomeGroup,
X2018)
country_incomes_elderly_continent <- country_incomes_elderly_continent %>%
rename(Continent=Region,
Country.Name="ï..Country.Name",
UpTo65=X2018)
head(country_incomes_elderly_continent)
total_casos <- read.csv(file="..\\..\\csv\\covid_19_series\\TotalCases_covid19_timeserie.csv",
sep = ",")
total_muertes <- read.csv(file="..\\..\\csv\\covid_19_series\\TotalDeaths_covid19_timeserie.csv",
sep = ",")
total_tests <- read.csv(file="..\\..\\csv\\covid_19_series\\TotalTests_covid19_timeserie.csv",
sep = ",")
# Quitamos índices de países vacíos
total_casos <- total_casos[!is.na(total_casos$Country),]
total_muertes <- total_muertes[!is.na(total_muertes$Country),]
total_tests <- total_tests[!is.na(total_tests$Country),]
# Quitamos datos del mundo
total_casos <- total_casos[!total_casos$Country=='World',]
total_muertes <- total_muertes[!total_muertes$Country=='World',]
total_tests <- total_tests[!total_tests$Country=='World',]
# Limpiamos los casos donde hay Nan en la medida: será 0.
total_casos[is.na(total_casos)] <- 0
total_muertes[is.na(total_muertes)] <- 0
total_tests[is.na(total_tests)] <- 0
# Mostramos ejemplos de unas pocas columnas y unas pocas filas
head(total_muertes[,1:3])
index_100<-function(row){
#Inicializamos los datos del pais, sera c(nombre, idColumna40diasDC)
res <- c(row[1], NaN)
#Vemos el numero de columnas que hay: numero de dias+nombrepais
ncols <- length(names(row))
#Recorremos todos los dias(por eso desde el 2, no recorremos el nombre)
for(idxCol in seq(2,ncols)){
#Obtenemos los fallecidos de ese dia
fallec = as.numeric(row[idxCol])
#Si superan nuestro umbral de 100 establecemos el resultado, BREAK del loop y return
#Es decir, el primer valor que pase de 100 romperá el bucle
if(fallec>100){
if((idxCol==2)&(fallec>100)){
#Si ya en la primera columna hay mas de 100, estimamos los dias
res<-c(row[1], -round((sqrt(fallec)/4))+40)
}else{
res<-c(row[1], as.numeric(idxCol)+40)
}
#Salimos del bucle para devolver el resultado segun encontramos el 1er valor >100
break
}
}
return(res)
}
#Aplicamos la funcion a cada linea del df, a cada pais
death_100 <- apply(total_muertes, 1, FUN=index_100)
#Creamos el dataframe de la lista resultante
death_100 <- as.data.frame(t(death_100))
#Damos nombre a las coumnas
colnames(death_100) <- c("Pais", "idCol")
#Convertimos la columna a numerico
death_100$idCol <- as.numeric(as.character(death_100$idCol))
#Ordenamos los paises por la llegada del Covid
death_100 <- death_100[order(death_100$idCol),]
#Mostramos un ejemplo del resultado
death_100[c(1,2,4,20,50,65,100),]
get_deaths_40_days <- function(row){
idCol <- as.numeric(row["idCol"])
fall <- total_muertes[total_muertes$Country==row["Pais"],idCol]
casos <- total_casos[total_casos$Country==row["Pais"],idCol]
test <- total_tests[total_tests$Country==row["Pais"],idCol]
if(is.null(casos)){
casos<-0
fall<-0
test<-0
}
return(c(row["Pais"],casos,fall,test))
}
day_40_dc <- apply(death_100, 1, FUN=get_deaths_40_days)
day_40_dc <- as.data.frame(t(as.data.frame(day_40_dc)))
colnames(day_40_dc) <- c("Pais", "CasosDia40DC", "FallDia40DC", "Tests")
day_40_dc$CasosDia40DC <- as.numeric(as.character(day_40_dc$CasosDia40DC))
day_40_dc$FallDia40DC <- as.numeric(as.character(day_40_dc$FallDia40DC))
day_40_dc$Pais <- as.character(day_40_dc$Pais)
#Vemos los países que tenemos en total (de momento son todos)
dim(day_40_dc)
head(day_40_dc)
day_40_dc <- day_40_dc[(day_40_dc$CasosDia40DC>0),]
#Contamos los países con los que podemos realizar en análisis estático.
dim(day_40_dc)
#Mostramos ejemplo del dataset
head(day_40_dc)
poblacion <- read.csv(file="..\\..\\csv\\world_population_2020.csv")
poblacion <- poblacion %>% rename(Country="Country..or.dependency.",
Poblacion="Population..2020.",
Densidad="Density..P.KmÂ².")
head(poblacion[order(poblacion$Country),])
day_40_dc[day_40_dc$Pais=='USA',]$Pais <-"United States"
day_40_dc[day_40_dc$Pais=='UK',]$Pais <-"United Kingdom"
day_40_dc[day_40_dc$Pais=='S. Korea',]$Pais <-"South Korea"
day_40_dc[day_40_dc$Pais=='Czechia',]$Pais <-"Czech Republic (Czechia)"
covid_country<-merge(day_40_dc, poblacion, by.x="Pais", by.y="Country",all.x = TRUE)
covid_country<-covid_country[order(-covid_country$CasosDia40DC),]
head(covid_country)
aux<-merge(covid_country, country_incomes_elderly_continent, by.x="Pais",
by.y="Country.Name",all.x = TRUE)
aux[is.na(aux$Country.Code),]
country_incomes_elderly_continent$Country.Name <-
as.character(country_incomes_elderly_continent$Country.Name)
country_incomes_elderly_continent[country_incomes_elderly_continent$Country.Name==
'Czech Republic',]$Country.Name <-"Czech Republic (Czechia)"
country_incomes_elderly_continent[country_incomes_elderly_continent$Country.Name==
'Egypt, Arab Rep.',]$Country.Name <-"Egypt"
country_incomes_elderly_continent[country_incomes_elderly_continent$Country.Name==
'Iran, Islamic Rep.',]$Country.Name <-"Iran"
country_incomes_elderly_continent[country_incomes_elderly_continent$Country.Name==
'Russian Federation',]$Country.Name <-"Russia"
country_incomes_elderly_continent[country_incomes_elderly_continent$Country.Name==
'Korea, Rep.',]$Country.Name <-"South Korea"
country_covid_and_metadata <- merge(covid_country, country_incomes_elderly_continent,
by.x="Pais", by.y="Country.Name",all.x = TRUE)
#Borramos el codigo del pais
country_covid_and_metadata <- country_covid_and_metadata %>% select(-Country.Code)
head(country_covid_and_metadata)
sapply(country_covid_and_metadata, class)
country_covid_and_metadata$Tests <- as.numeric(as.character(country_covid_and_metadata$Tests))
country_covid_and_metadata$Poblacion <- as.numeric(country_covid_and_metadata$Poblacion)
sapply(country_covid_and_metadata, function(x) sum(is.na(x)))
show_outlier<-function(data){
values <- boxplot.stats(data)$out
idx <- which( data %in% values)
cat("Valores extremos:", toString(values), "\n" )
(country_covid_and_metadata[idx, ])
}
show_outlier(country_covid_and_metadata$CasosDia40DC)
show_outlier(country_covid_and_metadata$FallDia40DC)
show_outlier(country_covid_and_metadata$Tests)
show_outlier(country_covid_and_metadata$Poblacion)
show_outlier(country_covid_and_metadata$Densidad)
show_outlier(country_covid_and_metadata$UpTo65)
country_covid_and_metadata[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC,]
country_covid_and_metadata$Tests[country_covid_and_metadata$Tests
< country_covid_and_metadata$CasosDia40DC]<-10
model_tests <- lm(Tests∼CasosDia40DC+FallDia40DC, data=country_covid_and_metadata)
summary(model_tests)
casos = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$CasosDia40DC
falle = country_covid_and_metadata[country_covid_and_metadata$Pais=='China',]$FallDia40DC
newdata <- data.frame( CasosDia40DC = casos, FallDia40DC=falle)
(pr <- predict(model_tests, newdata))
country_covid_and_metadata$Tests[country_covid_and_metadata$Pais=='China']<-round(pr)
write.csv(country_covid_and_metadata, "..\\..\\csv\\country_40dc_metadata.csv", row.names=FALSE)
head(country_covid_and_metadata) %>% kable(caption="Head de Dataset Final") %>%
kable_styling(latex_options="scale_down")
ds_40dc <- read.csv(file="..\\..\\csv\\country_40dc_metadata.csv")
# ESPAÑA-ITALIA
x1 <- ds_40dc[ds_40dc$Pais=="Spain", "CasosDia40DC"]
n1 <- ds_40dc[ds_40dc$Pais=="Spain", "Poblacion"]
x2 <- ds_40dc[ds_40dc$Pais=="Italy", "CasosDia40DC"]
n2 <- ds_40dc[ds_40dc$Pais=="Italy", "Poblacion"]
p1 = x1/n1
p2 = x2/n2
p = (x1+x2)/(n1+n2)
sp = sqrt(p*(1-p)*(1/n1+1/n2))
z = (p1-p2)/sp
pnorm(z, lower.tail=FALSE)
# ESPAÑA-PORTUGAL
x2 <- ds_40dc[ds_40dc$Pais=="Portugal", "CasosDia40DC"]
n2 <- ds_40dc[ds_40dc$Pais=="Portugal", "Poblacion"]
p1 = x1/n1
p2 = x2/n2
p = (x1+x2)/(n1+n2)
sp = sqrt(p*(1-p)*(1/n1+1/n2))
z = (p1-p2)/sp
pnorm(z, lower.tail=FALSE)
# ESPAÑA-ALEMANIA
x2 <- ds_40dc[ds_40dc$Pais=="Germany", "CasosDia40DC"]
n2 <- ds_40dc[ds_40dc$Pais=="Germany", "Poblacion"]
p1 = x1/n1
p2 = x2/n2
p = (x1+x2)/(n1+n2)
sp = sqrt(p*(1-p)*(1/n1+1/n2))
z = (p1-p2)/sp
pnorm(z, lower.tail=FALSE)
proporciones <- ds_40dc$CasosDia40DC/ds_40dc$Poblacion
continentes <- ds_40dc$Continent
boxplot(proporciones ~ continentes,
col = c("yellow", "blue", "grey","green", "pink", "orange"),
ylab = "Proporción de población contagiada")
anova = aov(lm(proporciones ~ continentes))
summary(anova)
n=nrow(ds_40dc) #número de instancias
l=6 #número de grupos
qf(0.05, l-1, n-l, lower.tail = F) #valor crítico
tests <- ds_40dc$Tests/ds_40dc$Poblacion
contagiados <- ds_40dc$CasosDia40DC/ds_40dc$Poblacion
cor(tests, contagiados, method = c("pearson", "kendall", "spearman"))
cor(x, y, method = c("pearson", "kendall", "spearman"))
